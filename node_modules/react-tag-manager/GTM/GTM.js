'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GMT = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _api = require('../api');

var _api2 = _interopRequireDefault(_api);

var _scripts = require('../utils/scripts');

var _scripts2 = _interopRequireDefault(_scripts);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GMT = exports.GMT = function (_React$Component) {
  _inherits(GMT, _React$Component);

  function GMT() {
    _classCallCheck(this, GMT);

    return _possibleConstructorReturn(this, (GMT.__proto__ || Object.getPrototypeOf(GMT)).apply(this, arguments));
  }

  _createClass(GMT, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var _props = this.props,
          gtm = _props.gtm,
          dataLayerName = _props.dataLayerName,
          dataLayer = _props.dataLayer,
          pageviewEvent = _props.pageviewEvent;


      if (gtm && gtm.id) {
        _api2.default.init(dataLayerName);
        _api2.default.setDataLayer(dataLayer);

        (0, _scripts2.default)(gtm, dataLayerName, function () {
          var pathname = _this2.props.location.pathname;


          _api2.default.loaded();

          _api2.default.trigger({
            event: pageviewEvent,
            url: pathname
          });
        });
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var newPathName = nextProps.location.pathname,
          pageviewEvent = nextProps.pageviewEvent;
      var oldPathName = this.props.location.pathname;


      if (newPathName !== oldPathName) {
        _api2.default.trigger({
          event: pageviewEvent,
          url: newPathName
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return GMT;
}(_react2.default.Component);

GMT.defaultProps = {
  pageviewEvent: 'pageview',
  dataLayerName: 'dataLayer'
};
GMT.displayName = 'GMT';
exports.default = (0, _reactRouter.withRouter)(GMT);